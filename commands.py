import weather, schedule_npi
from json_state import save_state
from config import WEATHER_STATE_FILE, SCHEDULE_STATE_FILE, CONTROL_CHAT_ID, AVATARS_DIR, MUSIC_STATE_FILE
import logging
from mention_all import mention_all

# –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞
from images import get_random_avatar, prepare_image
from telethon.tl.functions.photos import UploadProfilePhotoRequest


async def handle_command(client, event, states, music_manager):
    text = event.raw_text.strip().lower()
    chat_id = event.chat_id
    weather_enabled = states['weather']
    avatar_enabled = states['avatar']
    schedule_enabled = states['schedule']

    # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º !
    if text.startswith('!'):
        await client.delete_messages(chat_id, [event.id])
        parts = text[1:].split()
        command = parts[0]
        arg = parts[1] if len(parts) > 1 else None

        match command:
            case "–ø–æ–≥–æ–¥–∞":
                await weather.send_weather_card(client, chat_id, weather_enabled)
            case "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
                if arg:
                    await schedule_npi.send_schedule(client, chat_id, arg.upper())
                else:
                    await client.send_message(chat_id, "‚ùå –£–∫–∞–∂–∏ –≥—Ä—É–ø–ø—É: POV –∏–ª–∏ KMS")
            case "all":
                await mention_all(client, chat_id)
        return

    # –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π —á–∞—Ç
    if chat_id != CONTROL_CHAT_ID:
        return

    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–º —á–∞—Ç–µ: {text}")

    match text:
        case "–≤–∫–ª_–ø–æ–≥–æ–¥–∞":
            states['weather'] = True
            save_state(WEATHER_STATE_FILE, True)
            await event.reply("‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤–∫–ª—é—á—ë–Ω.")
        case "–≤—ã–∫–ª_–ø–æ–≥–æ–¥–∞":
            states['weather'] = False
            save_state(WEATHER_STATE_FILE, False)
            await event.reply("‚ùå –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤—ã–∫–ª—é—á–µ–Ω.")
        case "–≤–∫–ª_–∞–≤–∞—Ç–∞—Ä":
            states['avatar'] = True
            await event.reply("‚úÖ –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫ –≤–∫–ª—é—á–µ–Ω–∞.")
        case "–≤—ã–∫–ª_–∞–≤–∞—Ç–∞—Ä":
            states['avatar'] = False
            await event.reply("‚ùå –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫ –≤—ã–∫–ª—é—á–µ–Ω–∞.")
        case "—Å–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä":
            if states['avatar']:
                avatar_path = get_random_avatar(AVATARS_DIR)
                if avatar_path:
                    tmp_path = prepare_image(avatar_path)
                    file = await client.upload_file(tmp_path)
                    await client(UploadProfilePhotoRequest(file=file))
                    await event.reply("üñº –ê–≤–∞—Ç–∞—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
                else:
                    await event.reply("‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–∫.")
            else:
                await event.reply("‚ö†Ô∏è –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫ –≤—ã–∫–ª—é—á–µ–Ω–∞.")
        case "–≤–∫–ª_—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
            states['schedule'] = True
            save_state(SCHEDULE_STATE_FILE, True)
            await event.reply("‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ.")
        case "–≤—ã–∫–ª_—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
            states['schedule'] = False
            save_state(SCHEDULE_STATE_FILE, False)
            await event.reply("‚ùå –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ.")
        case "–≤—ã–∫–ª_–º—É–∑—ã–∫–∞":
            if music_manager:
                music_manager.disable_with_placeholder()
            states['music'] = False
            save_state(MUSIC_STATE_FILE, False)
            await event.reply("‚ùå –ñ–∏–≤–æ–π —Å—Ç–∞—Ç—É—Å –º—É–∑—ã–∫–∏ –≤—ã–∫–ª—é—á–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç–∏—á–Ω—ã–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä.")

        case "–≤–∫–ª_–º—É–∑—ã–∫–∞":
            if music_manager:
                music_manager.enable()
                await music_manager.update_music_status(music_manager.current_status)
            states['music'] = True
            save_state(MUSIC_STATE_FILE, True)
            await event.reply("‚úÖ –ñ–∏–≤–æ–π —Å—Ç–∞—Ç—É—Å –º—É–∑—ã–∫–∏ –≤–∫–ª—é—á—ë–Ω.")

        case "—Å—Ç–∞—Ç—É—Å":
            status_text = (
                f"üå¶ –ü–æ–≥–æ–¥–∞: {'–≤–∫–ª—é—á—ë–Ω ‚úÖ' if states['weather'] else '–≤—ã–∫–ª—é—á–µ–Ω ‚ùå'}\n"
                f"üñº –ê–≤—Ç–æ—Å–º–µ–Ω–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫: {'–≤–∫–ª—é—á–µ–Ω–∞ ‚úÖ' if states['avatar'] else '–≤—ã–∫–ª—é—á–µ–Ω–∞ ‚ùå'}\n"
                f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {'–≤–∫–ª—é—á–µ–Ω–æ ‚úÖ' if states['schedule'] else '–≤—ã–∫–ª—é—á–µ–Ω–æ ‚ùå'}"
                f"üéµ –ú—É–∑—ã–∫–∞: {'–≤–∫–ª—é—á–µ–Ω ‚úÖ' if states['music'] else '–≤—ã–∫–ª—é—á–µ–Ω ‚ùå'}\n"

            )
            await event.reply(status_text)
        case "help":
            help_text = (
                "üìú –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
                "–≤–∫–ª_–ø–æ–≥–æ–¥–∞ / –≤—ã–∫–ª_–ø–æ–≥–æ–¥–∞ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–æ–º\n"
                "–≤–∫–ª_–∞–≤–∞—Ç–∞—Ä / –≤—ã–∫–ª_–∞–≤–∞—Ç–∞—Ä ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∞–º–∏\n"
                "—Å–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä ‚Äî —Å–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É —Å–µ–π—á–∞—Å\n"
                "–≤–∫–ª_—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ / –≤—ã–∫–ª_—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º\n"
                "—Å—Ç–∞—Ç—É—Å ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å—ã\n"
                "help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
                "–í –ª—é–±–æ–º —á–∞—Ç–µ:\n!–ø–æ–≥–æ–¥–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑\n!—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
            )
            await event.reply(help_text)
        case _:
            await event.reply("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏ 'help'.")
